version: '3.9'

services:
  db:
    image: postgres:16-alpine
    container_name: sazim-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-sazim}
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER:-postgres}"]
      interval: 5s
      timeout: 5s
      retries: 10

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: sazim-backend
    depends_on:
      db:
        condition: service_healthy
    environment:
      NODE_ENV: production
      PORT: 3000
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@db:5432/${POSTGRES_DB:-sazim}
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost:5173}
    expose:
      - "3000"
    # Remove the ports section - let nginx handle external access

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: sazim-frontend
    environment:
      # This is used at BUILD TIME, not runtime
      VITE_GRAPHQL_ENDPOINT: ${VITE_GRAPHQL_ENDPOINT:-/graphql}
    ports:
      - "5173:80"
    depends_on:
      - backend

volumes:
  db-data: