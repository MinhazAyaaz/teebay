// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/** ---------- Enums ---------- **/
enum Category {
  ELECTRONICS
  FURNITURE
  HOME_APPLIANCES
  SPORTING_GOODS
  OUTDOOR
  TOYS
}

enum RentInterval {
  HOURLY
  DAILY
  WEEKLY
  MONTHLY
  YEARLY
}

enum ProductStatus {
  AVAILABLE
  SOLD
  RENTED
  ARCHIVED
}

enum Condition {
  NEW
  LIKE_NEW
  GOOD
  FAIR
}

enum OrderType {
  SALE
  RENT
}

enum OrderStatus {
  PENDING
  CONFIRMED
  CANCELLED
}

/** ---------- Core ---------- **/

model User {
  id        String   @id @default(uuid()) @db.Uuid
  firstName String
  lastName  String
  address   String
  phone     String
  email     String   @unique
  password  String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  products    Product[]  @relation("UserProducts")  // owner listings
  orders      Order[]    @relation("UserOrders")    // purchases/rentals as a customer
}

model Product {
  id                 String           @id @default(uuid()) @db.Uuid
  ownerId            String           @db.Uuid
  title              String
  description        String?
  condition          Condition        @default(GOOD)
  status             ProductStatus    @default(AVAILABLE)
  salePrice          Decimal?         @db.Decimal(12,2)
  rentPrice          Decimal?         @db.Decimal(12,2)
  rentInterval       RentInterval?    @default(DAILY)
  currency           String           @default("BDT")
  createdAt          DateTime         @default(now())
  updatedAt          DateTime         @updatedAt

  owner              User             @relation("UserProducts", fields: [ownerId], references: [id], onDelete: Cascade)
  categories         ProductCategory[]
  orders             Order[]

  @@index([ownerId])
}

model ProductCategory {
  productId String @db.Uuid
  category  Category

  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@id([productId, category])
}

model Order {
  id          String       @id @default(uuid()) @db.Uuid
  type        OrderType
  status      OrderStatus  @default(PENDING)

  productId   String       @db.Uuid
  buyerId     String       @db.Uuid // the customer

  amount      Decimal      @db.Decimal(12,2)
  currency    String       @default("BDT")

  // RENT-only fields (nullable for SALE)
  startDate   DateTime?
  endDate     DateTime?

  createdAt   DateTime     @default(now())

  product     Product      @relation(fields: [productId], references: [id], onDelete: Restrict)
  buyer       User         @relation("UserOrders", fields: [buyerId], references: [id], onDelete: Restrict)

  @@index([productId])
  @@index([buyerId])
  @@index([type])
  @@index([status])
}
